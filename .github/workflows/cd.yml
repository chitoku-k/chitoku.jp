name: CD Workflow
on:
  push:
    tags:
      - '*'

permissions:
  contents: read
  id-token: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Extract .env
        run: echo "$ENVFILE" > .env
        env:
          ENVFILE: ${{ secrets.ENVFILE }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build (dependencies)
        uses: docker/build-push-action@v4
        with:
          context: .
          target: dependencies
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            CI
      - name: Build (cache)
        uses: docker/build-push-action@v4
        with:
          context: .
          target: cache
          cache-from: type=gha
          cache-to: type=gha
          build-args: |
            CI
            GATSBY_UPDATE_INDEX=true
      - name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          tags: container.chitoku.jp/chitoku-k/chitoku.jp
          build-args: |
            CI
            GATSBY_UPDATE_INDEX=true
      - name: Set up ID token
        uses: actions/github-script@v6
        id: id-token
        with:
          result-encoding: string
          script: |
            return await core.getIDToken('container.chitoku.jp');
      - name: Log into Container Registry
        uses: docker/login-action@v2
        with:
          registry: container.chitoku.jp
          username: oauth2accesstoken
          password: ${{ steps.id-token.outputs.result }}
      - name: Push to Container Registry
        run: |
          docker push container.chitoku.jp/chitoku-k/chitoku.jp
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
      - name: Set up ID token
        uses: actions/github-script@v6
        id: id-token
        with:
          result-encoding: string
          script: |
            return await core.getIDToken('k8s.chitoku.jp');
      - name: Set context
        run: |
          kubectl config set-cluster k8s.chitoku.jp --server=https://k8s.chitoku.jp
          kubectl config set-credentials github-actions --token=${{ steps.id-token.outputs.result }}
          kubectl config set-context k8s.chitoku.jp --cluster=k8s.chitoku.jp --user=github-actions
          kubectl config use-context k8s.chitoku.jp
      - name: Rollout restart
        run: |
          kubectl rollout restart deployment/chitokujp
      - name: Purge cache
        uses: jakejarvis/cloudflare-purge-action@v0.3.0
        env:
          CLOUDFLARE_ZONE: ${{ secrets.CLOUDFLARE_ZONE }}
          CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
