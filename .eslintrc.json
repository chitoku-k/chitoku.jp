{
  "parserOptions": {
    "ecmaVersion": 2019
  },
  "extends": [
    "eslint:all"
  ],
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "rules": {
    "array-bracket-newline": "off",
    "array-bracket-spacing": ["error", "always"],
    "array-element-newline": "off",
    "arrow-parens": ["error", "as-needed"],
    "camelcase": "off",
    "comma-dangle": ["error", "always-multiline"],
    "dot-location": ["error", "property"],
    "function-call-argument-newline": "off",
    "id-length": "off",
    "indent": ["error", 2],
    "init-declarations": "off",
    "max-len": "off",
    "max-lines": "off",
    "max-lines-per-function": "off",
    "max-statements": "off",
    "multiline-comment-style": "off",
    "multiline-ternary": "off",
    "no-continue": "off",
    "no-confusing-arrow": "off",
    "no-extra-parens": "off",
    "no-magic-numbers": "off",
    "no-mixed-operators": "off",
    "no-negated-condition": "off",
    "no-nested-ternary": "off",
    "no-process-env": "off",
    "no-ternary": "off",
    "no-warning-comments": "warn",
    "object-curly-spacing": ["error", "always"],
    "object-property-newline": "off",
    "one-var": ["error", {
      "initialized": "never",
      "uninitialized": "always"
    }],
    "padded-blocks": ["error", "never"],
    "prefer-arrow-callback": ["error", {
      "allowNamedFunctions": true
    }],
    "prefer-destructuring": "off",
    "quote-props": ["error", "as-needed"],
    "quotes": ["error", "single"],
    "semi": ["error", "never"],
    "sort-imports": ["warn", {
      "ignoreDeclarationSort": true
    }],
    "sort-keys": "off",
    "sort-vars": "off",
    "space-before-function-paren": ["error", {
      "anonymous": "always",
      "asyncArrow": "always",
      "named": "never"
    }]
  },
  "overrides": [
    {
      "files": ["**/*.{ts,tsx}"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "plugins": [
        "@typescript-eslint",
        "react-hooks"
      ],
      "extends": [
        "plugin:react/all",
        "plugin:@typescript-eslint/all",
        "plugin:@typescript-eslint/eslint-recommended"
      ],
      "rules": {
        "@typescript-eslint/camelcase": "off",
        "@typescript-eslint/explicit-function-return-type": ["warn", {
          "allowExpressions": true,
          "allowTypedFunctionExpressions": true
        }],
        "@typescript-eslint/indent": ["error", 2],
        "@typescript-eslint/member-delimiter-style": ["error", {
          "multiline": {
            "delimiter": "none"
          }
        }],
        "@typescript-eslint/no-extra-parens": ["error", "all", {
          "ignoreJSX": "all"
        }],
        "@typescript-eslint/no-magic-numbers": "off",
        "@typescript-eslint/no-type-alias": ["error", {
          "allowAliases": "always"
        }],
        "@typescript-eslint/no-unused-vars": ["error", {
          "ignoreRestSiblings": true
        }],
        "@typescript-eslint/prefer-readonly-parameter-types": "off",
        "@typescript-eslint/quotes": ["error", "single"],
        "@typescript-eslint/restrict-template-expressions": ["error", {
          "allowBoolean": true,
          "allowNumber": true
        }],
        "@typescript-eslint/semi": ["error", "never"],
        "@typescript-eslint/space-before-function-paren": ["error", {
          "anonymous": "always",
          "asyncArrow": "always",
          "named": "never"
        }],
        "@typescript-eslint/strict-boolean-expressions": "off",
        "@typescript-eslint/typedef": "off",
        "react/forbid-component-props": "off",
        "react/function-component-definition": "off",
        "react/jsx-closing-bracket-location": ["error", "after-props"],
        "react/jsx-filename-extension": ["error", {
          "extensions": [".tsx"]
        }],
        "react/jsx-first-prop-new-line": "off",
        "react/jsx-indent": ["error", 2],
        "react/jsx-indent-props": ["error", 2],
        "react/jsx-max-depth": "off",
        "react/jsx-max-props-per-line": "off",
        "react/jsx-no-literals": "off",
        "react/jsx-one-expression-per-line": "off",
        "react/jsx-props-no-spreading": "off",
        "react/jsx-sort-props": "off",
        "react/no-adjacent-inline-elements": "off",
        "react/no-multi-comp": ["error", {
          "ignoreStateless": true
        }],
        "react/prop-types": "off",
        "react-hooks/exhaustive-deps": "warn",
        "react-hooks/rules-of-hooks": "error"
      }
    }
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
